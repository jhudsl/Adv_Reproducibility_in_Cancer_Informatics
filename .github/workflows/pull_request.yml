# Candace Savonen Dec 2021

name: Pull Request

on:
  pull_request:
    branches: [ main, staging ]

jobs:

  yaml-check:
    name: Load user automation choices
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

        # Use the yaml-env-action action.
      - name: Load environment from YAML
        uses: doughepi/yaml-env-action@v1.0.0
        with:
            files: config_automation.yml # Pass a space-separated list of configuration files. Rightmost files take precedence.

      - name: Make branch if it doesn't exist
        run: |
          git config --local user.email "itcrtrainingnetwork@gmail.com"
          git config --local user.name "jhudsl-robot"

          branch_name='preview-${{ github.event.pull_request.number }}'
          exists=$(git ls-remote https://${{ secrets.GH_PAT }}@github.com/$GITHUB_REPOSITORY $branch_name | wc -l | xargs)
          if [[ $exists == 0 ]];then
            echo branch doesnt exist
            git checkout -b $branch_name || echo branch exists
            git push --set-upstream origin $branch_name
          else
            echo branch does exist
          fi
        shell: bash

    outputs:
      toggle_spell_check: "${{ env.SPELL_CHECK }}"
      toggle_url_check: "${{ env.URL_CHECKER }}"
      toggle_quiz_check: "${{ env.CHECK_QUIZZES }}"

  spell-check:
    name: Check spelling
    needs: yaml-check
    runs-on: ubuntu-latest
    if: ${{needs.yaml-check.outputs.toggle_spell_check == 'yes'}}
    container:
      image: jhudsl/course_template

    steps:
      - name: Checkout files
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          git config --local user.email "itcrtrainingnetwork@gmail.com"
          git config --local user.name "jhudsl-robot"

          branch_name='preview-${{ github.event.pull_request.number }}'
          git fetch --all
          git checkout $branch_name
          git merge -s recursive --strategy-option=theirs origin/${{ github.head_ref }}
        shell: bash

      - name: Run spell check
        id: spell_check_run
        run: |
          results=$(Rscript "scripts/spell-check.R")
          echo "::set-output name=sp_chk_results::$results"
          cat resources/spell_check_results.tsv

      - name: Archive spelling errors
        uses: actions/upload-artifact@v2
        with:
          name: spell-check-results
          path: resources/spell_check_results.tsv

      - name: Commit spell check errors
        run: |
          branch_name='preview-${{ github.event.pull_request.number }}'
          git add --force resources/spell_check_results.tsv
          git commit -m 'Add spell check file' || echo "No changes to commit"
          git pull --set-upstream origin $branch_name --allow-unrelated-histories
          git push --force origin $branch_name || echo "No changes to commit"

      - name: Build components of the spell check comment
        id: build-components
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          branch_name='preview-${{ github.event.pull_request.number }}'
          sp_error_url=https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/$branch_name/resources/spell_check_results.tsv
          echo ::set-output name=time::$(date +'%Y-%m-%d')
          echo ::set-output name=commit_id::$GITHUB_SHA
          echo ::set-output name=sp_error_url::$sp_error_url

      # Handle the commenting
      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: spelling errors

      - name: Spelling errors!
        if: ${{ steps.spell_check_run.outputs.sp_chk_results >= 3 }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            :warning: There are spelling errors that need to be addressed. [Read this guide for more info](https://github.com/jhudsl/OTTR_Template/wiki/Spell-check).
            [Download the errors here.](${{ steps.build-components.outputs.sp_error_url }})
            _Comment updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace

      - name: Check spell check results - fail if too many errors
        if: ${{ steps.spell_check_run.outputs.sp_chk_results >= 3 }}
        run: exit 1

      - name: No spelling errors
        if: ${{ steps.spell_check_run.outputs.sp_chk_results < 3 }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            No spelling errors! :tada:
            _Comment updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace

  url-check:
    name: Check URLs
    needs: yaml-check
    runs-on: ubuntu-latest
    if: ${{needs.yaml-check.outputs.toggle_url_check == 'yes'}}

    steps:
    - name: checkout repo
      uses: actions/checkout@v2

    - name: Login as jhudsl-robot
      run: |
        git config --local user.email "itcrtrainingnetwork@gmail.com"
        git config --local user.name "jhudsl-robot"

    - name: URLs-checker
      uses: urlstechie/urlchecker-action@master
      with:
        # Delete the cloned repository after running URLchecked (default is false)
        cleanup: true

        # A comma-separated list of file types to cover in the URL checks
        file_types: .Rmd,.md

        # Choose whether to include file with no URLs in the prints.
        print_all: false

        # A comma separated links to exclude during URL checks
        exclude_urls: https://jhudatascience.org/{Course_Name}}

        # choose if the force pass or not
        force_pass : true

  check-quizzes:
    name: Check Leanpub quizzes
    needs: yaml-check
    runs-on: ubuntu-latest
    container:
      image: jhudsl/course_template
    if: ${{needs.yaml-check.outputs.toggle_quiz_check == 'yes'}}
    steps:
      - name: Checkout files
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          git config --local user.email "itcrtrainingnetwork@gmail.com"
          git config --local user.name "jhudsl-robot"

          branch_name='preview-${{ github.event.pull_request.number }}'
          git fetch --all
          git checkout $branch_name
          git merge -s recursive --strategy-option=theirs origin/${{ github.head_ref }}
        shell: bash

      - name: Run quiz check
        id: quiz_check_run
        run: |
          Rscript -e "ottr::check_quizzes(quiz_dir = 'quizzes', write_report = TRUE, verbose = TRUE)"
          results=0
          if -f "question_error_report.tsv"; then
            results=$(wc -l < question_error_report.tsv >/dev/null)
          fi
          echo ::set-output name=quiz_chk_results::$results

      - name: Commit quiz check errors
        run: |
          branch_name='preview-${{ github.event.pull_request.number }}'
          git diff --name-only origin/main -- question_error_report.tsv >/dev/null && changes=true || changes=false
          echo $changes
          if $changes == true; then
            git diff --name-only origin/$branch_name question_error_report.tsv >/dev/null && changes=true || changes=false
            echo $changes
            if $changes == true; then
              git add --force question_error_report.tsv
              git diff-index --quiet HEAD || git commit -m 'Add question error report file'
              git pull --set-upstream origin $branch_name --allow-unrelated-histories
              git push origin $branch_name
            fi
          fi

      - name: Build components of the quiz check comment
        id: build-components
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          branch_name='preview-${{ github.event.pull_request.number }}'
          quiz_error_url=https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/$branch_name/question_error_report.tsv
          echo ::set-output name=time::$(date +'%Y-%m-%d')
          echo ::set-output name=commit_id::$GITHUB_SHA
          echo ::set-output name=quiz_error_url::$quiz_error_url

      # Handle the commenting
      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: quiz errors

      - name: Quiz errors!
        if: ${{ steps.quiz_check_run.outputs.quiz_chk_results >= 2 }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            :warning: There are quiz errors that need to be addressed. [Read this guide for more info](https://github.com/jhudsl/OTTR_Template/wiki/Publishing-on-Leanpub#setting-up-quizzes).
            [Download the errors here.](${{ steps.build-components.outputs.quiz_error_url }})
            _Comment updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace

      - name: Check quiz check results - fail if too many errors
        if: ${{ steps.quiz_check_run.outputs.quiz_chk_results >= 2 }}
        run: exit 1

      - name: No quiz errors
        if: ${{ steps.quiz_check_run.outputs.quiz_chk_results < 2 }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            No quiz errors detected! :tada:
            _Comment updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace
